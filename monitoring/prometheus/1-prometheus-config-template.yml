---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: prometheus-config
    app.kubernetes.io/instance: prometheus-config
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/part-of: monitoring-stack
    app.kubernetes.io/managed-by: none
  name: prometheus-config
  namespace: techcon-monitoring
data:
  monitoring-prometheus-k8s-rules.yaml: |
    groups:
    - name: alert.rules
      rules:
      - alert: TECHCONPodOutOfMemory
        expr: container_memory_usage_bytes/10000000 > 500
        for: 1m
        labels:
          severity: warning
        annotations:
          summary: "Host out of memory"
          description: "Node memory is filling up (< 10% left)\n Currently: {{ $value | printf \"%.2f\" }}"
          runbook: https://wiki.mgm-tp.com/confluence/display/COSMO/MIMAS+Runbook#MIMAS-Hostoutofmemory
      - alert: TECHCONHostOutOfMemory
        expr: node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes * 100 < 95
        for: 1m
        labels:
          severity: warning
        annotations:
          summary: "Host out of memory (instance {{ $labels.instance }} of MIMAS)"
          description: "Node memory is filling up (< 10% left)\n Currently: {{ $value | printf \"%.2f\" }}"
          runbook: https://wiki.mgm-tp.com/confluence/display/COSMO/MIMAS+Runbook#MIMAS-Hostoutofmemory
      - alert: TECHCONHostMemoryUnderMemoryPressure
        expr: rate(node_vmstat_pgmajfault[1m]) > 100
        for: 1m
        labels:
          severity: warning
        annotations:
          summary: "Host memory under memory pressure (instance {{ $labels.instance }} of MIMAS)"
          description: "The node is under heavy memory pressure. High rate of major page faults\n  Currently: {{ $value | printf \"%.2f\" }}"
          runbook: https://wiki.mgm-tp.com/confluence/display/COSMO/MIMAS+Runbook#MIMAS-Hostmemoryunderpressure
      - alert: TECHCONHostUnusualNetworkThroughputOut
        expr: sum by (instance) (irate(node_network_transmit_bytes_total[2m])) / 1024 / 1024 > 100
        for: 1m
        labels:
          severity: warning
        annotations:
          summary: "Host unusual network throughput out (instance {{ $labels.instance }} of MIMAS)"
          description: "Host network interfaces are probably sending too much data (> 100 MB/s)\n  Currently: {{ $value | printf \"%.2f\" }}"
          runbook: https://wiki.mgm-tp.com/confluence/display/COSMO/MIMAS+Runbook#MIMAS-Hostunusualnetworkthroughputout
      - alert: TECHCONHostOutOfDiskSpace
        expr: (node_filesystem_avail_bytes{mountpoint="/rootfs"}  * 100) / node_filesystem_size_bytes{mountpoint="/rootfs"} < 90
        for: 1m
        labels:
          severity: warning
        annotations:
          summary: "Host out of disk space (instance {{ $labels.instance }} of MIMAS)"
          description: "Disk is almost full (< 10% left)\n  Currently: {{ $value | printf \"%.2f\" }}"
          runbook: https://wiki.mgm-tp.com/confluence/display/COSMO/MIMAS+Runbook#MIMAS-Hostoutofdiskspace
      - alert: TECHCONHostHighCpuLoad
        expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[1m])) * 100) > 80
        for: 1m
        labels:
          severity: warning
        annotations:
          summary: "Host high CPU load (instance {{ $labels.instance }} of MIMAS)"
          description: "CPU load is > 80%\n  Currently: {{ $value | printf \"%.2f\" }}"
          runbook: https://wiki.mgm-tp.com/confluence/display/COSMO/MIMAS+Runbook#MIMAS-HostinhighCPUload
      - alert: TECHCONHostNodeOvertemperatureAlarm
        expr: node_hwmon_temp_crit_alarm_celsius == 1
        for: 1m
        labels:
          severity: error
        annotations:
          summary: "Host node overtemperature alarm (instance {{ $labels.instance }} of MIMAS)"
          description: "Physical node temperature alarm triggered"
          runbook: https://wiki.mgm-tp.com/confluence/display/COSMO/MIMAS+Runbook#MIMAS-Hostovertemperature
      - alert: TECHCONHostOomKillDetected
        expr: increase(node_vmstat_oom_kill[30m]) > 1
        for: 1m
        labels:
          severity: warning
        annotations:
          summary: "Host OOM kill detected (instance {{ $labels.instance }})"
          description: "OOM kill detected"
          runbook: https://wiki.mgm-tp.com/confluence/display/COSMO/MIMAS+Runbook#MIMAS-HostOOMkilldetected

  prometheus.yml: |-
    global:
      scrape_interval: 30s
      evaluation_interval: 30s

    rule_files:
      - /etc/prometheus/monitoring-prometheus-k8s-rules.yaml

    scrape_configs:
      - job_name: 'spring boot scrape'
        metrics_path: '/actuator/prometheus'
        scrape_interval: 5s
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
              - default
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_label_app]
            separator: ;
            regex: sample-spring-kotlin-microservice
            replacement: $1
            action: keep
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            separator: ;
            regex: http
            replacement: $1
            action: keep
          - source_labels: [__meta_kubernetes_namespace]
            separator: ;
            regex: (.*)
            target_label: namespace
            replacement: $1
            action: replace
          - source_labels: [__meta_kubernetes_pod_name]
            separator: ;
            regex: (.*)
            target_label: pod
            replacement: $1
            action: replace
          - source_labels: [__meta_kubernetes_service_name]
            separator: ;
            regex: (.*)
            target_label: service
            replacement: $1
            action: replace
          - source_labels: [__meta_kubernetes_service_name]
            separator: ;
            regex: (.*)
            target_label: job
            replacement: ${1}
            action: replace
          - separator: ;
            regex: (.*)
            target_label: endpoint
            replacement: http
            action: replace
      - job_name: 'prometheus'
        scrape_interval: 5s
        static_configs:
        - targets: ['localhost:9090']
      - job_name: node-exporter
        scrape_interval: 15s
        scrape_timeout: 10s
        metrics_path: /metrics
        scheme: http
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - separator: ;
          regex: __meta_kubernetes_pod_label_(.+)
          replacement: $1
          action: labelmap
        - source_labels: [__address__]
          separator: ;
          regex: ([^:]+)(?::\d+)?
          target_label: __address__
          replacement: $1:9100
          action: replace
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_label_k8s_app]
          separator: ;
          regex: infrastructure;node-exporter
          replacement: $1
          action: keep
        - source_labels: [__meta_kubernetes_namespace]
          separator: ;
          regex: (.*)
          target_label: namespace
          replacement: $1
          action: replace
        - source_labels: [__meta_kubernetes_pod_name]
          separator: ;
          regex: (.*)
          target_label: pod
          replacement: $1
          action: replace
        - source_labels: [__meta_kubernetes_pod_node_name]
          separator: ;
          regex: (.*)
          target_label: instance
          replacement: $1
          action: replace
      - job_name: kubernetes-nodes-cadvisor
        scrape_interval: 10s
        scrape_timeout: 10s
        scheme: https  # remove if you want to scrape metrics on insecure port
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          # Only for Kubernetes ^1.7.3.
          # See: https://github.com/prometheus/prometheus/issues/2916
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
        metric_relabel_configs:
          - action: replace
            source_labels: [id]
            regex: '^/machine\.slice/machine-rkt\\x2d([^\\]+)\\.+/([^/]+)\.service$'
            target_label: rkt_container_name
            replacement: '${2}-${1}'
          - action: replace
            source_labels: [id]
            regex: '^/system\.slice/(.+)\.service$'
            target_label: systemd_service_name
            replacement: '${1}'

      - job_name: 'kubernetes-apiservers'

        kubernetes_sd_configs:
        - role: endpoints
        scheme: https

        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: default;kubernetes;https

      - job_name: 'kubernetes-nodes'

        scheme: https

        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          # insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

        kubernetes_sd_configs:
        - role: node

        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - target_label: __address__
          replacement: kubernetes.default.svc:443
        - source_labels: [__meta_kubernetes_node_name]
          regex: (.+)
          target_label: __metrics_path__
          replacement: /api/v1/nodes/${1}/proxy/metrics

      - job_name: 'kubernetes-pods'

        kubernetes_sd_configs:
        - role: pod

        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name

    alerting:
      alertmanagers:
        - kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
              - techcon-monitoring
          scheme: http
          path_prefix: /
          timeout: 10s
          relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            regex: alertmanager
            action: keep
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            regex: http
            action: keep
